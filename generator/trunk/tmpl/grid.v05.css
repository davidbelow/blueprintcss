/* -------------------------------------------------------------- 
  
  BLUEPRINT CSS
   * Filename:        grid.css
   * Version:         __BP_VERSION__ (__BP_VERSION_DATE__) YYYY-MM-DD
   * Website:         http://code.google.com/p/blueprintcss/
  
  Generated by:
   * Blueprint CSS Grid Generator (__GEN_DATE__) [__GEN_URL__]
  
  Based on work by:
   * Olav Bjorkoy      [bjorkoy.com]
   * Nathan Borror     [playgroundblues.com]
   * Jeff Croft        [jeffcroft.com]
   * Christian Metts   [mintchaos.com]
   * Khoi Vinh         [subtraction.com]
  
  == STRUCTURE: ========================
   * Page width:            __PAGE_WIDTH__ px
   * Number of columns:     __NUMBER_OF_COLUMNS__
   * Column width:          __COLUMN_WIDTH__ px
   * Margin width:          __MARGIN_WIDTH__ px
  ======================================
   
  By default, the grid is __PAGE_WIDTH__px wide, with __NUMBER_OF_COLUMNS__ columns 
  spanning __COLUMN_WIDTH__px, and a __MARGIN_WIDTH__px margin between columns.
  
  If you need fewer or more columns, use this formula to calculate
  the new total width: 
  
  Total width = (number_of_columns * column_width) - margin_width
  
-------------------------------------------------------------- */

body { 
  text-align: center; /* IE6 Fix */
  margin:36px 0;
}

/* A container should group all your columns. */
.container {
  text-align: left;
  position: relative;
  padding: 0;
  margin: 0 auto;   /* Centers layout */
  width: __PAGE_WIDTH__px;     /* Total width */
}


/* Columns
-------------------------------------------------------------- */

/* Use this class together with the .span-x classes
   to create any composition of columns in a layout.
   Nesting columns works like a charm (remember .first and .last). */
   
.column {
  float: left;
  margin-right: __MARGIN_WIDTH__px;
  padding: 0;
}
* html .column { overflow-x: hidden; } /* IE6 fix */

/* Add this class to a column if you want a border on its 
   right hand side. This should be customized to fit your needs. */

.border {
  padding-right: __HALF_OF_MARGIN_WIDTH_MINUS_BORDER__px;
  margin-right: __HALF_OF_MARGIN_WIDTH__px;
  border-right: 1px solid #ddd;
}

/* Use these classes to set how wide a column should be. */
__SPANS__

/* The last element in a multi-column block needs this class. */
.last     { margin-right: 0; }

/* Add these to a column to append empty cols. */
__APPENDS__

/* Add these to a column to prepend empty cols. */
__PREPENDS__


/* Clearing floats without extra markup
   Based on How To Clear Floats Without Structural Markup by PiE
   [http://www.positioniseverything.net/easyclearing.html] */

.clear { display: inline-block; }   
.clear:after, .container:after {
    content: "."; 
    display: block; 
    height: 0; 
    clear: both; 
    visibility: hidden;
}
* html .clear { height: 1%; }
.clear { display: block; }



/* Images
-------------------------------------------------------------- */

/* Remember the baseline (typography.css). */
img { margin: 0 0 18px 0; }


/* Use these classes to make an image flow into the column before 
   or after it. This technique can also be used on other objects. */

__PULLS__


__PUSHS__

.pull-1, .pull-2, .pull-3, .pull-4,
.push-1, .push-2, .push-3, .push-4 {
  overflow-x: visible; /* Overrides previous IE6 fix (needs improvement). */
}

/* EOF */